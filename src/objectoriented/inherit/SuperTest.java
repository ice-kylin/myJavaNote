package objectoriented.inherit;

/*
# `super` 关键字

- `super` 理解为父类的...
- `super` 可以用来调用：属性、方法、构造器
- 可以在子类的方法或构造器中通过使用 `super.属性` 或 `super.方法` 的方式显式的调用父类中声明的属性或方法
  - 但是通常情况下习惯省略 `super.`
  - 特殊情况：当子类和父类定义了同名的属性时，想要在子类中调用父类中声明的属性，必须显式的使用 `super.属性` 的方式，表明调用的是父类中声明的属性
  - 当子类重写了父类中的方法以后，想在子类中调用父类中被重写的方法时，则必须显式的使用 `super.方法` 的方式，表明调用的是父类中被重写的方法
- 可以在子类的构造器中显式的使用 `super(形参列表)` 的方式，调用父类声明的指定的构造器
  - `super(形参列表)` 的使用必须声明在子类构造器的首行
  - 在类的构造器中针对 `this(形参列表)` 或 `super(形参列表)` 只能二选一，不能同时出现
  - 在构造器的首行没有显式的声明 `this(形参列表)` 或 `super(形参列表)`，则默认调用的是父类中空参的构造器 `super()`
  - 在类的多个构造器中，至少有一个类的构造器中使用了 `super(形参列表)` 调用父类中的构造器
 */
public class SuperTest {
}
