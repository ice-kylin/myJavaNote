package objectoriented;

/*
# `package` 和 `import` 关键字

## `package` 关键字

1. 为了更好地实现项目中类的管理，提供包的概念
2. 使用 `package` 声明类或接口所属的包，声明在源文件的首行
3. 包属于标示符，遵循标示符的命名规则和命名规范，还要见名知意
4. 每 `.` 一次，代表一层文件目录

### 补充

- 同一个包下不能命名同名的接口或类
- 不同的包下可以命令同名的接口或类

### MVC 设计模式

- 模型层
- 视图层
- 控制层

## `import` 关键字

1. 在源文件中显式的使用 `import` 结构导入指定包下的类、接口
2. 声明在包的声明和类的声明之间
3. 如果需要导入多个结构，则并列写出即可
4. 可以使用 `xxx.*` 的方式表示可以导入 `xxx` 下所有的结构
5. 如果使用的类或接口是 `java.lang` 包下定义的，则可以省略 `import` 结构
6. 如果使用的类或接口是本包下定义的，则可以省略 `import` 结构
7. 如果在源文件中使用了不同包下同名的类，则必须至少有一个类需要使用全类名的方式显示
8. 使用 `xxx.*` 方式表明可以调用 `xxx` 包下的所有结构，但是如果实用的是 `xxx` 子包下的结构，则仍需要显式的导入
9. `import static` 导入指定类或接口中静态结构：属性或方法
 */
public class PackageAndImport {
    public static void main(String[] args) {

    }
}
